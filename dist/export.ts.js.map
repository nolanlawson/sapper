{"version":3,"file":"export.ts.js","sources":["src/cli/export.ts"],"sourcesContent":["import * as child_process from 'child_process';\nimport * as path from 'path';\nimport * as sander from 'sander';\nimport * as clorox from 'clorox';\nimport cheerio from 'cheerio';\nimport URL from 'url-parse';\nimport fetch from 'node-fetch';\nimport * as ports from 'port-authority';\nimport prettyBytes from 'pretty-bytes';\nimport { minify_html } from './utils/minify_html';\nimport { locations } from '../config';\n\nexport async function exporter(export_dir: string, { basepath = '' }) {\n\tconst build_dir = locations.dest();\n\n\texport_dir = path.join(export_dir, basepath);\n\n\t// Prep output directory\n\tsander.rimrafSync(export_dir);\n\n\tsander.copydirSync('assets').to(export_dir);\n\tsander.copydirSync(build_dir, 'client').to(export_dir, 'client');\n\n\tif (sander.existsSync(build_dir, 'service-worker.js')) {\n\t\tsander.copyFileSync(build_dir, 'service-worker.js').to(export_dir, 'service-worker.js');\n\t}\n\n\tconst port = await ports.find(3000);\n\n\tconst origin = `http://localhost:${port}`;\n\n\tconst proc = child_process.fork(path.resolve(`${build_dir}/server.js`), [], {\n\t\tcwd: process.cwd(),\n\t\tenv: {\n\t\t\tPORT: port,\n\t\t\tNODE_ENV: 'production',\n\t\t\tSAPPER_DEST: build_dir,\n\t\t\tSAPPER_EXPORT: 'true'\n\t\t}\n\t});\n\n\tconst seen = new Set();\n\tconst saved = new Set();\n\n\tproc.on('message', message => {\n\t\tif (!message.__sapper__) return;\n\n\t\tlet file = new URL(message.url, origin).pathname.slice(1);\n\t\tlet { body } = message;\n\n\t\tif (saved.has(file)) return;\n\t\tsaved.add(file);\n\n\t\tconst is_html = message.type === 'text/html';\n\n\t\tif (is_html) {\n\t\t\tfile = file === '' ? 'index.html' : `${file}/index.html`;\n\t\t\tbody = minify_html(body);\n\t\t}\n\n\t\tconsole.log(`${clorox.bold.cyan(file)} ${clorox.gray(`(${prettyBytes(body.length)})`)}`);\n\n\t\tsander.writeFileSync(export_dir, file, body);\n\t});\n\n\tasync function handle(url: URL) {\n\t\tconst r = await fetch(url.href);\n\t\tconst range = ~~(r.status / 100);\n\n\t\tif (range >= 4) {\n\t\t\tconsole.log(`${clorox.red(`> Received ${r.status} response when fetching ${url.pathname}`)}`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (range === 2) {\n\t\t\tif (r.headers.get('Content-Type') === 'text/html') {\n\t\t\t\tconst body = await r.text();\n\t\t\t\tconst $ = cheerio.load(body);\n\t\t\t\tconst urls: URL[] = [];\n\n\t\t\t\tconst base = new URL($('base').attr('href') || '/', url.href);\n\n\t\t\t\t$('a[href]').each((i: number, $a) => {\n\t\t\t\t\tconst url = new URL($a.attribs.href, base.href);\n\n\t\t\t\t\tif (url.origin === origin && !seen.has(url.pathname)) {\n\t\t\t\t\t\tseen.add(url.pathname);\n\t\t\t\t\t\turls.push(url);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfor (const url of urls) {\n\t\t\t\t\tawait handle(url);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ports.wait(port)\n\t\t.then(() => handle(new URL(`/${basepath}`, origin))) // TODO all static routes\n\t\t.then(() => proc.kill());\n}"],"names":["clorox.red","locations","path.join","sander.rimrafSync","sander.copydirSync","sander.existsSync","sander.copyFileSync","ports.find","child_process.fork","path.resolve","minify_html","clorox.bold","clorox.gray","sander.writeFileSync","ports.wait"],"mappings":"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"}
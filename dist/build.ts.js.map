{"version":3,"file":"build.ts.js","sources":["src/cli/build.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as clorox from 'clorox';\nimport mkdirp from 'mkdirp';\nimport rimraf from 'rimraf';\nimport { minify_html } from './utils/minify_html';\nimport { create_compilers, create_main_manifests, create_routes, create_serviceworker_manifest } from '../core'\nimport { locations } from '../config';\n\nexport async function build() {\n\tconst output = locations.dest();\n\n\tmkdirp.sync(output);\n\trimraf.sync(path.join(output, '**/*'));\n\n\tconst routes = create_routes();\n\n\t// create app/manifest/client.js and app/manifest/server.js\n\tcreate_main_manifests({ routes });\n\n\tconst { client, server, serviceworker } = create_compilers();\n\n\tconst client_stats = await compile(client);\n\tconsole.log(`${clorox.inverse(`\\nbuilt client`)}`);\n\tconsole.log(client_stats.toString({ colors: true }));\n\tfs.writeFileSync(path.join(output, 'client_info.json'), JSON.stringify(client_stats.toJson()));\n\n\tconst server_stats = await compile(server);\n\tconsole.log(`${clorox.inverse(`\\nbuilt server`)}`);\n\tconsole.log(server_stats.toString({ colors: true }));\n\n\tlet serviceworker_stats;\n\n\tif (serviceworker) {\n\t\tcreate_serviceworker_manifest({\n\t\t\troutes,\n\t\t\tclient_files: client_stats.toJson().assets.map((chunk: { name: string }) => `client/${chunk.name}`)\n\t\t});\n\n\t\tserviceworker_stats = await compile(serviceworker);\n\t\tconsole.log(`${clorox.inverse(`\\nbuilt service worker`)}`);\n\t\tconsole.log(serviceworker_stats.toString({ colors: true }));\n\t}\n\n\t// minify app/template.html\n\t// TODO compile this to a function? could be quicker than str.replace(...).replace(...).replace(...)\n\tconst template = fs.readFileSync(`${locations.app()}/template.html`, 'utf-8');\n\tfs.writeFileSync(`${output}/template.html`, minify_html(template));\n}\n\nfunction compile(compiler: any) {\n\treturn new Promise((fulfil, reject) => {\n\t\tcompiler.run((err: Error, stats: any) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\n\t\t\tif (stats.hasErrors()) {\n\t\t\t\tconsole.error(stats.toString({ colors: true }));\n\t\t\t\treject(new Error(`Encountered errors while building app`));\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tfulfil(stats);\n\t\t\t}\n\t\t});\n\t});\n}\n"],"names":["locations","path.join","create_routes","create_main_manifests","create_compilers","clorox.inverse","fs.writeFileSync","create_serviceworker_manifest","fs.readFileSync","minify_html"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;oBAUO,MAAM,GAAGA,qBAAS,CAAC,IAAI,EAAE,CAAC;oBAEhC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACpB,MAAM,CAAC,IAAI,CAACC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;oBAEjC,MAAM,GAAGC,0BAAa,EAAE,CAAC;;oBAG/BC,kCAAqB,CAAC,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;oBAE5B,KAAoCC,6BAAgB,EAAE,EAApD,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,aAAa,mBAAA,CAAwB;oBAExC,qBAAM,OAAO,CAAC,MAAM,CAAC,EAAA;;oBAApC,YAAY,GAAG,SAAqB;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAGC,cAAc,CAAC,gBAAgB,CAAG,CAAC,CAAC;oBACnD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBACrDC,gBAAgB,CAACL,SAAS,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAE1E,qBAAM,OAAO,CAAC,MAAM,CAAC,EAAA;;oBAApC,YAAY,GAAG,SAAqB;oBAC1C,OAAO,CAAC,GAAG,CAAC,KAAGI,cAAc,CAAC,gBAAgB,CAAG,CAAC,CAAC;oBACnD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;yBAIjD,aAAa,EAAb,wBAAa;oBAChBE,0CAA6B,CAAC;wBAC7B,MAAM,QAAA;wBACN,YAAY,EAAE,YAAY,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAuB,IAAK,OAAA,YAAU,KAAK,CAAC,IAAM,GAAA,CAAC;qBACnG,CAAC,CAAC;oBAEmB,qBAAM,OAAO,CAAC,aAAa,CAAC,EAAA;;oBAAlD,mBAAmB,GAAG,SAA4B,CAAC;oBACnD,OAAO,CAAC,GAAG,CAAC,KAAGF,cAAc,CAAC,wBAAwB,CAAG,CAAC,CAAC;oBAC3D,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;;oBAKvD,QAAQ,GAAGG,eAAe,CAAIR,qBAAS,CAAC,GAAG,EAAE,mBAAgB,EAAE,OAAO,CAAC,CAAC;oBAC9EM,gBAAgB,CAAI,MAAM,mBAAgB,EAAEG,uBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;CACnE;AAED,iBAAiB,QAAa;IAC7B,OAAO,IAAI,OAAO,CAAC,UAAC,MAAM,EAAE,MAAM;QACjC,QAAQ,CAAC,GAAG,CAAC,UAAC,GAAU,EAAE,KAAU;YACnC,IAAI,GAAG,EAAE;gBACR,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB;YAED,IAAI,KAAK,CAAC,SAAS,EAAE,EAAE;gBACtB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAChD,MAAM,CAAC,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAC;aAC3D;iBAEI;gBACJ,MAAM,CAAC,KAAK,CAAC,CAAC;aACd;SACD,CAAC,CAAC;KACH,CAAC,CAAC;CACH;;;;"}